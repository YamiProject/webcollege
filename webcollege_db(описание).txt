1) absenteeismes/прогулы
(Описание: Содержит информацию о всех прогулах студента.)
absenteeismes_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
absenteeismes_date (date) // Дата прогула.
absenteeismes_file (text) NULL // Ссылка на скан/фотографию объяснительной.

Пример заполнения:
- 1
- 1
- 2021-01-25
- ./files/38ИС-13/Крамарев/заявления/прогул20210125.pdf

2) deductions/отчисленные
(Описание: Содержит список отчисленных студентов.)
deduction_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
deduction_date (date) // Дата отчисления.
deduction_reasone (text) // Причина отчисления.
deduction_file (text) // Ссылка на приказ.

Пример заполнения:
- 1
- 1
- 2021-01-25
- Неоднакратно был пойман в употребление табачных изделий внутри колледжа.
- ./files/38ИС-13/Крамарев/отчисление.pdf

3) departments/отделения
(Описание: Содержит информацию об отделениях колледжа.)
department_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
department_name (varchar 20) UNIQUE // Наименование отделения.
department_abbreviated (varchar 20) UNIQUE // Аббривеатура отделения.
department_address (varchar 300) UNIQUE // Адрес отделения.

Пример заполнения:
- 1
- Отделение управления и информационных технологий.
- ОУИТ
- Г.Москва, Ул. Генерала Белов, Д.6

4) desciplines/дисциплины
(Описание: Содержит информацию о дисциплинах.)
descipline_id varchar(8) PK // Первиный ключ таблицы - идентификационный номер.
teacher_id (int) FK // Внешний ключ - идентификационный номер преподавателя.
descipline_name (varchar 30) // Наименование дисциплины.
descipline_hours (tinyint 3) // Количество часов.

Пример заполнения:
- 08.01
- 1
- Разработка интерфейсов пользователей
- 60

5) documents/документы
(Описание: Содержит информацию о документах студента.)
document_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
document_name (varchar 200) // Наименование документа.
document_number (varchar 40) // Номер документа.
document_scan (text) // Скан документа.

Пример заполнения:
- 1
- 1
- ИНН
- 77777777777777
- ./files/38ИС-13/Крамарев/документы/ИНН.pdf

6) grade_sheet/таблица_оценок
(Описание: Содержит информацию об оценках студента.)
gs_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
descipline_id (int) FK NULL // Внешний ключ - идентификационный номер дисциплины.
tos_id (int) FK // Внешний ключ - идентификационный номер категории оценки.
gs_date (date) // Дата проведения занятия.
gs_lesson_number (tinyint 1) NULL // Номер пары.
gs_score (tinytext 1) // Оценка.

Пример заполнения:
- 1
- 1
- 1
- 1
- 2021-05-20
- 2
- н

7) groups/группы
(Описание: Содержит информацию о группах.)
group_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
teacher_id (int) FK // Внешний ключ - идентификационный номер преподавателя.
department_id (int) FK // Внешний ключ - идентификационный номер отделения.
spetiality_id (int) FK // Внешний ключ - идентификационный номер специальности.
group_beg_education_date (date) // Год начала обучения.
group_end_education_date (date) // Год окончания обучения.

Пример заполнения:
- 1
- 1
- 1
- 1
- 2018
- 2021

8) offsite_events/выездные_мероприятия
(Описание: Содержит информацию о выездных мероприятиях.)
oe_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
group_id (int) FK // Внешний ключ - идентификационный номер группы.
oe_date (date) // Дата выездного мероприятия.
oe_name (varchar 300) // Наименование.
oe_people (int) // Количество людей.
oe_archive (text) // Ссылка на архив с фотографией(ями).
oe_address (varchar 300) // Адрес, где было проведено мероприятие.

Пример заполнения:
- 1
- 1
- 2021-05-20
- Выезд на природу
- 52
- ./files/38ИС-13/выездные/20210520/
- Г.Москва, Ул. Катюши Вернадской, Д.33

9) parents/родители
(Описание: Содержит информацию о родителях студентов.)
parent_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
parent_sur_name (varchar 200) // Фамилия родителя.
parent_name (varchar 200) // Имя родителя.
parent_mid_name (varchar 200) NULL // Отчество родителя.
parent_role (varchar 30) // Роль родителя (в семье).
parent_phone (varchar 13) // Номер телефона родителя.

Пример заполнения:
- 1
- 1
- Крамарев
- Максим
- Антонович
- Отец
- 88888888888

10) passports/паспорта
(Описание: Содержит информацию о паспортах студентов.)
passport_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
passport_series (tinyint 4) UNIQUE // Серия паспорта.
passport_number (tinyint 6) UNIQUE // Номер паспорта.
passport_data_of_issue (date) // Дата выдачи.
passport_address (varchar 250) // Факт. адрес проживания.
passport_issued_by (varchar 250) // Кем выдан.
passport_scan (text) // Ссылка на скан.

Пример заполнения:
- 1
- 1
- 1111
- 111111
- 2021-05-20
- г.Подольск, Ул. Вернике, Д.54, Кв.1
- РАТАТАТОЙ ПО ЧЕМУ-ТО ПО ТОМУ-ТО
- ./files/38ИС-13/Крамарев/документы/скан.pdf

11) portfolio/портфолио
(Описание: Содержит портфолио студентов.)
portfolio_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
student_id (int) FK // Внешний ключ - идентификационный номер студента.
portfolio_scan (text) // Ссылка на скан.

Пример заполнения:
- 1
- 1
- ./files/38ИС-13/Крамарев/портфоолио/скан.pdf

12) spetialities/специальности
(Описание: Содержит информацию о специальности групп.)
spetiality_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
spetiality_full_name (varchar 200) // Полное название специальности.
spetiality_abbriviated (varchar 20) // Аббревиатура.
spetiality_profession (varchar 200) // Профессия.

Пример заполнения:
- 1
- Информационне системы и программирование
- 38ИС-13
- Разработка веб. приложений и медиа

13) students/стеденты
(Описание: Содержит информацию о студентах.)
student_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
group_id (int) FK // Внешний ключ - идентификационный номер группы.
student_name (varchar 200) // Имя студента.
student_sur_name (varchar 200) // Фамилия студента.
student_mid_name (varchar 200) NULL // Отчество студента.
student_number (varchar 13) // Номер телефона.
student_birth_date (date) // Дата рождения.
student_sex (tinytext 1) // Пол.
student_disabled (tynyint 1) // Инвалидность?
student_photo (text) // Ссылка на фотографию.
student_headman (tinyint 1) // Староста?
student_login (varchar 300) UNIQUE // Логин.
student_password (varchar 300) // Пароль.

Пример заполнения:
- 1
- 1
- Крамарев
- Максим 
- Антонович
- 88888888888
- 2000-05-26
- М
- 1
- ./files/38ИС-13/Крамарев/аватар.png
- 0
- qqqqq
- 12345

14) teachers/преподаватели
(Описание: Содержит информацию о преподавателях.)
teacher_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
teacher_sur_name (varchar 200) // Фамилия преподавателя.
teacher_name (varchar 200) // Имя преподавателя.
teacher_mid_name (varchar 200) //  Отчество преподавателя.
teacher_number (varchar 13) // Номер телефона.
teacher_birth_date (date) // Дата рождения.
teacher_login (varchar 300) UNIQUE // Логин.
teacher_password (varchar 300) // Пароль.
teacher_accs_lvl (tinyint 1) // Уровень доступа (преподаватель/зав. отделением)

Пример заполнения:
- 1
- Киселёва
- Светлана
- Владимировна
- 88888888888
- 1980
- @ki5elyo7a (В приложении будет реалозовано регулярное выражение, где с "@" начинает логин преподавателя, а с "#" - зав. отделением)
- 12345

15) type_of_score/тип оценки
(Описание: Содержит категории для оценок.)
tos_id (int) PK AI // Первиный ключ таблицы - идентификационный номер.
tos_name (varchar 200) UNIQUE // Название категории.

Пример заполнения:
- 1
- Дифференцированный зачет
